#!/bin/bash

# Get the directory containing the script
MIMIR_HOME="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"
SCRIPTS_DIR="$MIMIR_HOME/scripts"

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# Function for error messages
error() {
    echo -e "${RED}ERROR: $1${NC}" >&2
    exit 1
}

# Function for verbose logging
log() {
    if [ $VERBOSE -eq 1 ]; then
        echo -e "${BLUE}[DEBUG] $1${NC}"
    fi
}

# Function to check if docker container is running
is_container_running() {
    local container_name=$1
    docker ps --format '{{.Names}}' | grep -q "^$container_name$"
}

# Command functions
cmd_status() {
    local container_name="voi-follower-node"
    
    # Check if container is running
    if ! is_container_running "$container_name"; then
        error "Container $container_name is not running"
    fi

    echo -e "${BLUE}${BOLD}Checking Voi Node Status...${NC}"
    echo "================================"

    # Run goal node status inside the container
    if ! docker exec "$container_name" goal node status; then
        error "Failed to get node status"
    fi
}

cmd_init() {
    # Parse flags for init command
    VERBOSE=0
    while getopts ":v" opt; do
        case $opt in
            v)
                VERBOSE=1
                ;;
            \?)
                error "Invalid option: -$OPTARG"
                ;;
        esac
    done
    shift $((OPTIND-1))

    # Run the initialization script
    cd "$MIMIR_HOME" || error "Failed to change to Mimir home directory"
    if ! "$SCRIPTS_DIR/init.sh" $([ $VERBOSE -eq 1 ] && echo "-v"); then
        error "Initialization failed"
    fi
}

cmd_reset() {
    # Parse flags for reset command
    VERBOSE=0
    FORCE=0
    while getopts ":vf" opt; do
        case $opt in
            v)
                VERBOSE=1
                ARGS="$ARGS -v"
                ;;
            f)
                FORCE=1
                ARGS="$ARGS -f"
                ;;
            \?)
                error "Invalid option: -$OPTARG"
                ;;
        esac
    done
    shift $((OPTIND-1))

    # Run the reset script with collected args
    cd "$MIMIR_HOME" || error "Failed to change to Mimir home directory"
    if ! "$SCRIPTS_DIR/reset-mimir-environment.sh" $ARGS; then
        error "Reset failed"
    fi
}

# Function to show usage
show_usage() {
    echo -e "${BOLD}Mimir - Voi Network Indexer Management Tool${NC}"
    echo
    echo "Usage: mimir COMMAND [OPTIONS]"
    echo
    echo "Commands:"
    echo "  init        Initialize or reinitialize the Mimir environment"
    echo "  reset       Reset the Mimir environment (requires confirmation)"
    echo "  status      Check the status of the Voi node"
    echo "  help        Show this help message"
    echo
    echo "Options:"
    echo "  init:"
    echo "    -v        Verbose mode"
    echo
    echo "  reset:"
    echo "    -v        Verbose mode"
    echo "    -f        Force reset (skip confirmation)"
    echo
}

# Main command processing
case "$1" in
    init)
        shift
        cmd_init "$@"
        ;;
    reset)
        shift
        cmd_reset "$@"
        ;;
    status)
        cmd_status
        ;;
    help|--help|-h)
        show_usage
        ;;
    "")
        show_usage
        exit 1
        ;;
    *)
        error "Unknown command: $1"
        ;;
esac